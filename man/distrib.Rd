% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distrib.R
\name{distrib}
\alias{distrib}
\title{Statistical Distribution Summary}
\usage{
distrib(
  var,
  var2 = NA,
  precision = "summary",
  getLabel = T,
  useNA = "message",
  filter = NA
)
}
\arguments{
\item{var}{A vector of numeric data.}

\item{var2}{A vector of qualitative data (if you desire to compute statistics by groups).}

\item{precision}{A character specifying the level of precision for the statistics.
Options: "summary" or "S", "edges" or "E", "deciles" or "D", "deciles_edges" or "D+E". Default is "summary".}

\item{getLabel}{Logical argument - Should the labels of the variables be displayed in a message when printing the result of the function?}

\item{useNA}{When "message", shows the information about NAs in the variables in a message. When "include", shows it inside the returned data.frame.}

\item{filter}{A logical vector used to filter \code{var} (and \code{var2}). Must be the same lenght.}
}
\value{
A data.frame object containing the selected descriptive statistics.

The function calculates the following statistics based on the precision option:
\itemize{
\item "summary": min, p25, p50 (median), p75, max, mean, sd
\item "edges": min, p01, p05, p10, p25, p50, p75, p90, p95, p99, max, mean, sd
\item "deciles": min, p10, p20, p30, p40, p50, p60, p70, p80, p90, max, mean, sd
\item "deciles_edges": min, p01, p05, p10, p20, p30, p40, p50, p60, p70, p80, p90, p95, p99, max, mean, sd
}

If useNA is set to "include", additional information about NAs is included in the returned data.frame.
\itemize{
\item "n_NA": Count of missing values
\item "p_NA": Proportion of missing values
}
}
\description{
This function computes various descriptive statistics for the given variable.
}
\examples{
# Example using the default precision ("summary")
data_ex <- rnorm(100)
distrib(data_ex)

# Example using precision "edges"
data_ex <- rnorm(100)
distrib(data_ex, precision = "edges")

# Example using the `var2` argument
data_ex1 <- rnorm(100)
data_ex2 <- sample(c("A", "B", "C"), 100, replace = TRUE)
distrib(data_ex1, data_ex2)

# Example using the `filter` argument
data_ex <- rnorm(100)
distrib(data_ex, filter = data_ex > 0)

}
